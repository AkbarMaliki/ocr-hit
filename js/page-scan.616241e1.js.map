{"version":3,"file":"js/page-scan.616241e1.js","mappings":"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","sources":["webpack://new/./src/pages/scan.vue","webpack://new/src/pages/scan.vue","webpack://new/./src/pages/scan.vue?3611","webpack://new/./src/pages/scan.vue?0413"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"home\",staticStyle:{\"height\":\"100vh\"}},[(_vm.modal)?_c('div',{staticStyle:{\"position\":\"fixed\",\"width\":\"100vw\",\"height\":\"100vh\",\"left\":\"0\",\"top\":\"0\",\"z-index\":\"18\"},on:{\"click\":function($event){_vm.modal=false}}}):_vm._e(),(_vm.modal)?_c('div',{staticStyle:{\"position\":\"fixed\",\"top\":\"50%\",\"left\":\"50%\",\"transform\":\"translateX(-50%) translateY(-50%)\",\"z-index\":\"19\",\"min-width\":\"80vw\"}},[_c('div',{staticClass:\"rounded-lg shadow p-3 bg-white animate__animated animate__bounceIn\"},[_c('p',{staticClass:\"text-sm font-semibold\"},[_vm._v(\"List Data (\"+_vm._s(_vm.item.table)+\")\")]),_c('hr'),_vm._l((_vm.listCropImage),function(item,index){return _c('div',{key:index+'listCropImage'},[_c('img',{directives:[{name:\"viewer\",rawName:\"v-viewer\"}],staticStyle:{\"width\":\"100px\"},attrs:{\"src\":item,\"alt\":\"\"}}),_c('br')])}),_vm._l((_vm.item.boxes),function(item,index){return _c('div',{key:index+'boxes'},[_c('p',{staticClass:\"m-0 p-0 text-xs\"},[_vm._v(\"Field : \"),_vm._v(\" \"+_vm._s(item.field)+\" \")]),_c('table',[_c('tr',[_c('td',{staticClass:\"p-0 m-0 text-xs\"},[_vm._v(\"Text\")]),_c('td',{staticClass:\"px-2\"},[_vm._v(\":\")]),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.boxes[index]['text']),expression:\"boxes[index]['text']\"}],staticClass:\"d-inline text-xs\",staticStyle:{\"border\":\"none\",\"width\":\"100%\"},attrs:{\"type\":\"text\"},domProps:{\"value\":(_vm.boxes[index]['text'])},on:{\"input\":function($event){if($event.target.composing)return;_vm.$set(_vm.boxes[index], 'text', $event.target.value)}}})])])]),_c('hr')])}),_c('hr'),_c('button',{staticClass:\"btn btn-sm btn-success\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.saveData}},[_vm._v(\"Simpan\")])],2)]):_vm._e(),_vm._m(0),_c('div',{staticStyle:{\"position\":\"absolute\",\"z-index\":\"15\",\"top\":\"0\",\"left\":\"0\"}},_vm._l((_vm.scaledBoxes),function(rect,index){return _c('div',{key:index,staticClass:\"rectangle\",style:(_vm.getRectangleStyles(rect))})}),0),_c('video',{attrs:{\"id\":\"video\",\"autoplay\":\"\",\"muted\":\"\",\"playsinline\":\"\"},domProps:{\"muted\":true}}),(_vm.item)?_c('button',{staticClass:\"btn btn-lg rounded-circle btn-success text-lg pt-3 pb-2\",staticStyle:{\"font-size\":\"20px\",\"position\":\"fixed\",\"z-index\":\"10000\"},style:(_vm.item.dimension=='landscape'?'top:20px;left:20px;':'bottom:20px;right:44%;'),attrs:{\"id\":\"captureBtn\"},on:{\"click\":_vm.capture}},[_c('i',{staticClass:\"text-lg fa fa-camera\",staticStyle:{\"font-size\":\"20px\"},attrs:{\"aria-hidden\":\"true\"}})]):_vm._e(),_c('br'),_c('canvas',{staticStyle:{\"display\":\"none\"},attrs:{\"id\":\"canvasElement\"}}),_c('img',{staticStyle:{\"display\":\"none\",\"position\":\"absolute\",\"z-index\":\"-1\",\"left\":\"-10000\"},attrs:{\"id\":\"photoElement\",\"src\":\"\",\"alt\":\"Captured Photo\"}}),_c('div',{attrs:{\"id\":\"cropContainer\"}})])\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticStyle:{\"position\":\"fixed\",\"top\":\"0\",\"left\":\"0\",\"z-index\":\"9999\"}},[_c('div',{staticClass:\"spinner-container\"},[_c('div',{staticClass:\"spinner\"})])])\n}]\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"home\" style=\"height:100vh;\">\r\n    <!-- MODAL -->\r\n    <div v-if=\"modal\" @click=\"modal=false\" style=\"position:fixed;width:100vw;height:100vh;left:0;top:0;z-index:18;\"></div>\r\n    <div v-if=\"modal\" style=\"position: fixed;top: 50%;left: 50%;transform: translateX(-50%) translateY(-50%);z-index:19;min-width:80vw;\">\r\n        <div class=\"rounded-lg shadow p-3 bg-white animate__animated animate__bounceIn\">\r\n            <p class=\"text-sm font-semibold\">List Data ({{item.table}})</p>\r\n            <hr>\r\n            <div v-for=\"(item, index) in listCropImage\" :key=\"index+'listCropImage'\"> \r\n              <img :src=\"item\" style=\"width:100px;\" alt=\"\" v-viewer>\r\n              <br>\r\n            </div>\r\n            <div v-for=\"(item, index) in item.boxes\"  :key=\"index+'boxes'\">\r\n                <p class=\"m-0 p-0 text-xs\">Field : \r\n                  <!-- <input type=\"text\" class=\"d-inline text-xs\" style=\"border:none;\" v-model=\"boxes[index]['field']\"> -->\r\n                  {{item.field}}\r\n                  </p>\r\n                <table>\r\n                  <tr>\r\n                    <td class=\"p-0 m-0 text-xs\">Text</td>\r\n                    <td class=\"px-2\">:</td>\r\n                    <td>\r\n                      <input type=\"text\" class=\"d-inline text-xs\" style=\"border:none;width: 100%;\" v-model=\"boxes[index]['text']\">\r\n                    </td>\r\n                  </tr>\r\n                </table>\r\n                <hr>\r\n            </div>\r\n            <hr>\r\n            <button type=\"button\" @click=\"saveData\" class=\"btn btn-sm btn-success\">Simpan</button>\r\n        </div>\r\n    </div>\r\n        <!-- MODAL -->\r\n    <div style=\"position: fixed; top: 0; left: 0; z-index: 9999\">\r\n      <div class=\"spinner-container\">\r\n        <div class=\"spinner\"></div>\r\n      </div>\r\n    </div>\r\n    <div style=\"position:absolute;z-index:15;top:0;left:0;\">\r\n     <div\r\n        v-for=\"(rect, index) in scaledBoxes\"\r\n        :key=\"index\"\r\n        :style=\"getRectangleStyles(rect)\"\r\n        class=\"rectangle\"\r\n      ></div>\r\n    </div>\r\n    <video id=\"video\" autoplay muted playsinline></video>\r\n    <button id=\"captureBtn\" @click=\"capture\" \r\n    class=\"btn btn-lg rounded-circle btn-success text-lg pt-3 pb-2\" \r\n    style=\"font-size:20px;position:fixed;z-index:10000;\"\r\n    v-if=\"item\"\r\n    :style=\"item.dimension=='landscape'?'top:20px;left:20px;':'bottom:20px;right:44%;'\"\r\n    ><i class=\"text-lg fa fa-camera\" style=\"font-size:20px;\" aria-hidden=\"true\"></i></button>\r\n    <br>\r\n    <canvas id=\"canvasElement\" style=\"display:none;\"></canvas>\r\n    <img id=\"photoElement\" src=\"\" style=\"display:none;position:absolute;z-index:-1;left:-10000;\" alt=\"Captured Photo\">\r\n    <div id=\"cropContainer\">\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport auto from \"@/plugins/autophp\"\r\nlet sdb=new auto()\r\nexport default {\r\n    data() {\r\n        return {\r\n            boxes:[],\r\n            scaledBoxes:[],\r\n            height:1920,\r\n            width:1080,\r\n            item:false,\r\n            scan:false,\r\n            modal:false,\r\n            listCropImage: [],\r\n            listHasil:[]\r\n        }\r\n    },\r\n    layout:'camera',\r\n  methods: {\r\n    async saveData(){\r\n        let that=this;\r\n        const dataCollection = firebase.collection(firebase.firestore, that.item.table);\r\n        let obj={}\r\n        that.boxes.forEach(e=>{\r\n            obj[e.field]=e.text\r\n        })\r\n        await firebase.addDoc(dataCollection, obj)\r\n        .then((docRef) => {\r\n            console.log('Layouts added with ID: ', docRef.id);\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error adding Layouts: ', error);\r\n        });\r\n        that.modal=false;\r\n        that.$router.push(`/database?table=${that.item.table}&id=${that.$route.query.id}`)\r\n    },\r\n     capture() {\r\n            let that=this;\r\n            sdb.loadingOn()\r\n            that.listCropImage=[]\r\n            const canvas = document.getElementById('canvasElement');\r\n            const photoElement = document.getElementById('photoElement');\r\n            canvas.width = video.videoWidth;\r\n            canvas.height = video.videoHeight;\r\n            canvas.getContext('2d').drawImage(video, 0, 0, canvas.width, canvas.height);\r\n            const photoURL = canvas.toDataURL('image/jpeg');\r\n            photoElement.src = photoURL;\r\n            setTimeout(() => {\r\n                that.cropPhoto()\r\n            }, 1000);\r\n            // this.sendToApi(photoURL)\r\n        },\r\n        cropPhoto() {\r\n            let that=this;\r\n            \r\n            console.log('start croping')\r\n            const imgElement = document.getElementById('photoElement');\r\n            const canvas = document.createElement('canvas');\r\n            const ctx = canvas.getContext('2d');\r\n            const img = new Image();\r\n            let container=document.getElementById('cropContainer')\r\n            const paddingX = 100; // Adjust the padding as needed for the horizontal sides\r\n            const paddingY = 100; \r\n            img.onload = async () => {\r\n                let k=this.boxes.length-1\r\n                for (let i=0;i<this.boxes.length;i++){\r\n                // for (const box of this.boxes) {\r\n                    var { x, y, width, height } = this.boxes[i];\r\n                   // Add padding to the cropped image dimensions\r\n                    let paddedWidth = width + 2 * paddingX;\r\n                    let paddedHeight = height + 2 * paddingY;\r\n\r\n                    canvas.width = paddedWidth;\r\n                    canvas.height = paddedHeight;\r\n\r\n                    // Calculate the offset positions for drawing the cropped image with padding\r\n                    let offsetX = paddingX;\r\n                    let offsetY = paddingY;\r\n\r\n                    if (that.item.dimension == 'landscape') {\r\n                      y += 95;\r\n                      x -= 80;\r\n                    }\r\n\r\n                    // Draw white rectangle to fill the padding\r\n                    ctx.fillStyle = 'white';\r\n                    ctx.fillRect(0, 0, paddedWidth, paddedHeight);\r\n\r\n                    // ctx.filter = 'saturate(2)';\r\n                    const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n                    const data = imageData.data;\r\n\r\n                 const blackThreshold = 100;\r\n\r\n  for (let i = 0; i < data.length; i += 4) {\r\n    const avg = (data[i] + data[i + 1] + data[i + 2]) / 3;\r\n\r\n    if (avg >= blackThreshold) {\r\n      // Change non-black pixels to white\r\n      data[i] = 255; // Red channel\r\n      data[i + 1] = 255; // Green channel\r\n      data[i + 2] = 255; // Blue channel\r\n    } else {\r\n      // Darken black pixels (reduce RGB values)\r\n      data[i] = data[i] * 0.8; // Red channel\r\n      data[i + 1] = data[i + 1] * 0.8; // Green channel\r\n      data[i + 2] = data[i + 2] * 0.8; // Blue channel\r\n    }\r\n  }\r\n\r\n  ctx.putImageData(imageData, 0, 0);\r\n                    ctx.drawImage(\r\n                      img,\r\n                      x,\r\n                      y,\r\n                      width,\r\n                      height,\r\n                      offsetX,\r\n                      offsetY,\r\n                      width,\r\n                      height\r\n                    );\r\n\r\n                    const dataUrl = canvas.toDataURL();\r\n                    const croppedImage = new Image();\r\n                    croppedImage.src = dataUrl;\r\n                    that.listCropImage.push(dataUrl)\r\n                    // container.appendChild(croppedImage)\r\n                    // console.log(croppedImage)\r\n                    await that.sendToApi(dataUrl,i)\r\n                    if(k==i){\r\n                        sdb.loadingOff()\r\n                        that.modal=true\r\n                    }\r\n                }\r\n            };\r\n            img.setAttribute('crossorigin', 'anonymous'); // works for me\r\n            img.src = imgElement.src;\r\n        },\r\n        async sendToApi(photoURL,i){\r\n            let that=this;\r\n            const apiUrl = 'https://hit-ocr.online/api/upload-ocr'; // Replace this with the actual API endpoint\r\n            function dataURLtoFile(dataURL, filename) {\r\n                const arr = dataURL.split(',');\r\n                const mime = arr[0].match(/:(.*?);/)[1];\r\n                const bstr = atob(arr[1]);\r\n                let n = bstr.length;\r\n                const u8arr = new Uint8Array(n);\r\n                while (n--) {\r\n                    u8arr[n] = bstr.charCodeAt(n);\r\n                }\r\n                return new File([u8arr], filename, { type: mime });\r\n            }\r\n            const file = dataURLtoFile(photoURL, `image${i}.jpg`);\r\n            const formData = new FormData();\r\n            formData.append('file', file);\r\n            let hasil=await axios.post(apiUrl,formData)\r\n            console.log('hasil',hasil)\r\n            that.item.boxes[i]['text']=hasil.data.text.join(\" \")\r\n            that.$forceUpdate()\r\n            console.log(that.item.boxes[i])\r\n            return hasil\r\n        },\r\n        getRectangleStyles({ x, y, width, height }) {\r\n            return {\r\n            position: 'absolute',\r\n            left: `${x}px`,\r\n            top: `${y}px`,\r\n            width: `${width}px`,\r\n            height: `${height}px`,\r\n            border: '1px solid red',\r\n            };\r\n      },\r\n    startVideo() {\r\n      let that = this;\r\n      const video = document.getElementById(\"video\");\r\n      navigator.mediaDevices\r\n        .getUserMedia({\r\n          video: {\r\n            facingMode: \"environment\",\r\n            width: { ideal: that.item.dimension=='landscape'?that.width:that.height },\r\n            height: { ideal: that.item.dimension=='landscape'?that.height:that.width },\r\n          },\r\n        })\r\n        .then(function (mediaStream) {\r\n          that.$forceUpdate();\r\n          video.srcObject = mediaStream;\r\n          video.play();\r\n           function scaleBoxes(boxes, sourceWidth, sourceHeight, targetWidth, targetHeight) {\r\n                const scaleX = targetWidth / sourceWidth;\r\n                const scaleY = targetHeight / sourceHeight;\r\n\r\n                const scaledBoxes = boxes.map((box) => ({\r\n                    x: box.x * scaleX,\r\n                    y: box.y * scaleY,\r\n                    width: box.width * scaleX,\r\n                    height: box.height * scaleY,\r\n                }));\r\n\r\n                return scaledBoxes;\r\n            }\r\n            const boxes = that.boxes\r\n            setTimeout(() => {\r\n                const video2 = document.getElementById(\"video\");\r\n                const sourceWidth = that.item.dimension=='landscape'?that.height:that.width;\r\n                const sourceHeight = that.item.dimension=='landscape'?that.width:that.height;\r\n                const targetWidth =video2.clientWidth;\r\n                const targetHeight = video2.clientHeight;// video2.clientHeight\r\n                // console.log(window.screen.width,window.screen.height)\r\n                const scaledBoxes = scaleBoxes(boxes, sourceWidth, sourceHeight, targetWidth, targetHeight);\r\n                that.scaledBoxes=scaledBoxes\r\n                sdb.alert(`Posisikan Camera ${that.item.dimension}`,'bg-yellow-800')\r\n            }, 2000);\r\n        });\r\n    },\r\n     async getData(){\r\n          let that=this;\r\n          const docRef = firebase.doc(firebase.firestore, 'ocr-layouts', that.$route.query.id);\r\n          firebase.getDoc(docRef)\r\n            .then((docSnapshot) => {\r\n              if (docSnapshot.exists()) {\r\n                let obj=docSnapshot.data();\r\n                that.item=obj;\r\n                that.height=obj.height\r\n                that.width=obj.width\r\n                if(obj.boxes){\r\n                  that.boxes=obj.boxes\r\n                }\r\n                that.imageUrl=`https://hit-ocr.online/uploaded/`+obj.filename\r\n                console.log('Document data:', docSnapshot.data());\r\n                that.startVideo();\r\n              } else {\r\n                console.log('Document does not exist');\r\n              }\r\n            })\r\n            .catch((error) => {\r\n              console.error('Error getting document:', error);\r\n            });\r\n      },\r\n  },\r\n  mounted() {\r\n    this.getData()\r\n  },\r\n};\r\n</script>\r\n<style>\r\n.spinner-container {\r\n  background-color: transparent; /* Transparent background */\r\n  position:fixed;left:0;top:0;\r\n}\r\n\r\n.spinner {\r\n  width: 100px;\r\n  height: 100px;\r\n  border-radius: 50%;\r\n  border: 5px solid rgba(128, 128, 128, 0.224);\r\n  border-top-color: transparent;\r\n  animation: spin 1s infinite linear;\r\n}\r\n\r\n@keyframes spin {\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n.crop-image-container {\r\n  display: inline-block;\r\n  margin: 10px;\r\n  border: 1px solid black;\r\n}\r\n.crop-image-container img {\r\n  width: 100%;\r\n  height: auto;\r\n}\r\nbody {\r\n  margin: 0;\r\n  overflow: hidden;\r\n}\r\nvideo {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n  position: relative;\r\n  display: inline-block;\r\n}\r\n.rectangle {\r\n  background-color: rgba(255, 0, 0, 0.5);\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./scan.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./scan.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./scan.vue?vue&type=template&id=4fce6fc2&\"\nimport script from \"./scan.vue?vue&type=script&lang=js&\"\nexport * from \"./scan.vue?vue&type=script&lang=js&\"\nimport style0 from \"./scan.vue?vue&type=style&index=0&id=4fce6fc2&prod&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","staticStyle","modal","on","$event","_e","_v","_s","item","table","_l","listCropImage","index","key","directives","name","rawName","attrs","boxes","field","value","expression","domProps","target","composing","$set","saveData","_m","scaledBoxes","rect","style","getRectangleStyles","dimension","capture","staticRenderFns","sdb","auto","data","height","width","scan","listHasil","layout","methods","that","dataCollection","firebase","collection","firestore","obj","forEach","e","text","addDoc","then","docRef","console","log","id","catch","error","$router","push","$route","query","loadingOn","canvas","document","getElementById","photoElement","video","videoWidth","videoHeight","getContext","drawImage","photoURL","toDataURL","src","setTimeout","cropPhoto","imgElement","createElement","ctx","img","Image","paddingX","paddingY","onload","k","length","i","x","y","paddedWidth","paddedHeight","offsetX","offsetY","fillStyle","fillRect","imageData","getImageData","blackThreshold","avg","putImageData","dataUrl","croppedImage","sendToApi","loadingOff","setAttribute","apiUrl","dataURLtoFile","dataURL","filename","arr","split","mime","match","bstr","atob","n","u8arr","Uint8Array","charCodeAt","File","type","file","formData","FormData","append","hasil","axios","post","join","$forceUpdate","position","left","top","border","startVideo","navigator","mediaDevices","getUserMedia","facingMode","ideal","mediaStream","scaleBoxes","sourceWidth","sourceHeight","targetWidth","targetHeight","scaleX","scaleY","map","box","srcObject","play","video2","clientWidth","clientHeight","alert","doc","getDoc","docSnapshot","exists","imageUrl","mounted","getData","component"],"sourceRoot":""}