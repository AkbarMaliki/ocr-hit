{"version":3,"file":"js/page-test copy.521029b5.js","mappings":"kJAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACE,YAAY,QAAQ,CAACJ,EAAIK,GAAG,GAAGH,EAAG,QAAQ,CAACI,MAAM,CAAC,GAAK,QAAQ,SAAW,GAAG,MAAQ,GAAG,YAAc,IAAIC,SAAS,CAAC,OAAQ,KAAQL,EAAG,SAAS,CAACI,MAAM,CAAC,GAAK,cAAcE,GAAG,CAAC,MAAQR,EAAIS,UAAU,CAACT,EAAIU,GAAG,mBAAmBR,EAAG,SAAS,CAACS,YAAY,CAAC,QAAU,QAAQL,MAAM,CAAC,GAAK,mBAAmBJ,EAAG,MAAM,CAACI,MAAM,CAAC,GAAK,eAAe,IAAM,GAAG,IAAM,oBAAoBJ,EAAG,MAAM,CAACI,MAAM,CAAC,GAAK,iBACtd,EACIM,EAAkB,CAAC,WAAY,IAAIZ,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACS,YAAY,CAAC,SAAW,QAAQ,IAAM,IAAI,KAAO,IAAI,UAAU,SAAS,CAACT,EAAG,MAAM,CAACE,YAAY,qBAAqB,CAACF,EAAG,MAAM,CAACE,YAAY,eAC5N,GCgBA,GACAS,OACA,OACAC,QAAA,GAEA,EACAC,QAAA,CACAN,UACA,MAAAO,EAAAC,SAAAC,eAAA,iBACAC,EAAAF,SAAAC,eAAA,gBACAF,EAAAI,MAAAC,MAAAC,WACAN,EAAAO,OAAAF,MAAAG,YACAR,EAAAS,WAAA,MAAAC,UAAAL,MAAA,IAAAL,EAAAI,MAAAJ,EAAAO,QACA,MAAAI,EAAAX,EAAAY,UAAA,cACAT,EAAAU,IAAAF,CACA,EACAG,aACA,IAAAC,EAAA,KACA,MAAAV,EAAAJ,SAAAC,eAAA,SACAc,EAAAf,SAAAC,eAAA,cACAe,UAAAC,aAAAC,aAAA,CACA,OAEAC,WAAA,cACAC,WAAA,OACAjB,MAAA,CAAAkB,MAAA,MACAf,OAAA,CAAAe,MAAA,SAGAC,MAAA,SAAAC,GACAT,EAAAU,eACApB,EAAAqB,UAAAF,EACA,MAAAG,EAAAH,EAAAI,iBAAA,GACAC,EAAAF,EAAAG,cAcA,SAAAC,IACA,MAAAzB,EAAAD,EAAAC,WACAE,EAAAH,EAAAG,YACAwB,EAAA,GAAAC,KAAAC,IAAA5B,EAAAE,GACA2B,GAAA7B,EAAA0B,GAAA,EACAI,GAAA5B,EAAAwB,GAAA,EAEAhB,EAAAqB,MAAAC,KAAAH,EAAA,KACAnB,EAAAqB,MAAAE,IAAAH,EAAA,KACApB,EAAAqB,MAAAjC,MAAA4B,EAAA,KACAhB,EAAAqB,MAAA9B,OAAAyB,EAAA,IACA,CAxBAH,EAAAT,WAAA,cACAL,EAAAjB,QAAA+B,EACAxB,EAAAmC,OACAnC,EAAAoC,iBAAA,uBACA,MAAAnC,EAAAD,EAAAC,WACAE,EAAAH,EAAAG,YACAH,EAAAqC,aAAA,QAAApC,GACAD,EAAAqC,aAAA,SAAAlC,GACAQ,EAAAqB,MAAAjC,MAAAI,EAAA,KACAQ,EAAAqB,MAAA9B,OAAAD,EAAA,QAkBAD,EAAAoC,iBAAA,SAAAV,GACAA,GAEA,GACA,GAEAY,UACA,KAAA7B,YACA,GCxFyP,I,UCQrP8B,GAAY,OACd,EACA7D,EACAa,GACA,EACA,KACA,KACA,MAIF,EAAegD,EAAiB,O","sources":["webpack://new/./src/pages/test copy.vue","webpack://new/src/pages/test copy.vue","webpack://new/./src/pages/test copy.vue?1e13","webpack://new/./src/pages/test copy.vue?d093"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"home\"},[_vm._m(0),_c('video',{attrs:{\"id\":\"video\",\"autoplay\":\"\",\"muted\":\"\",\"playsinline\":\"\"},domProps:{\"muted\":true}}),_c('button',{attrs:{\"id\":\"captureBtn\"},on:{\"click\":_vm.capture}},[_vm._v(\"Capture Photo\")]),_c('canvas',{staticStyle:{\"display\":\"none\"},attrs:{\"id\":\"canvasElement\"}}),_c('img',{attrs:{\"id\":\"photoElement\",\"src\":\"\",\"alt\":\"Captured Photo\"}}),_c('div',{attrs:{\"id\":\"box-border\"}})])\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticStyle:{\"position\":\"fixed\",\"top\":\"0\",\"left\":\"0\",\"z-index\":\"9999\"}},[_c('div',{staticClass:\"spinner-container\"},[_c('div',{staticClass:\"spinner\"})])])\n}]\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"home\">\r\n    <div style=\"position:fixed;top:0;left:0;z-index:9999;\">\r\n        <div class=\"spinner-container\">\r\n            <div class=\"spinner\"></div>\r\n        </div>\r\n    </div>\r\n        <video  id=\"video\" autoplay muted playsinline></video>\r\n        <button id=\"captureBtn\" @click=\"capture\">Capture Photo</button>\r\n        <canvas id=\"canvasElement\" style=\"display:none;\"></canvas>\r\n        <img id=\"photoElement\" src=\"\" alt=\"Captured Photo\">\r\n        <div id=\"box-border\"></div>\r\n        <!-- <div>\r\n            {{setting}}\r\n        </div> -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    data() {\r\n        return {\r\n            setting:{}\r\n        }\r\n    },\r\n    methods: {\r\n        capture() {\r\n            const canvas = document.getElementById('canvasElement');\r\n            const photoElement = document.getElementById('photoElement');\r\n            canvas.width = video.videoWidth;\r\n            canvas.height = video.videoHeight;\r\n            canvas.getContext('2d').drawImage(video, 0, 0, canvas.width, canvas.height);\r\n            const photoURL = canvas.toDataURL('image/jpeg');\r\n            photoElement.src = photoURL;\r\n        },\r\n        startVideo() {\r\n            let that=this;\r\n            const video = document.getElementById('video')\r\n            const boxBorder = document.getElementById(\"box-border\");\r\n                navigator.mediaDevices.getUserMedia({\r\n                    'video': {\r\n                        // 'facingMode': that.$store.state.camera=='belakang'?'environment':'user',\r\n                        facingMode: 'environment',\r\n                        resizeMode: \"true\",\r\n                        width: { ideal: 1920 },\r\n                        height: { ideal: 1080 }\r\n                        // , width: { ideal: 512 },height:{ideal:512}\r\n                    }\r\n                }).then(function(mediaStream) {\r\n                    that.$forceUpdate();\r\n                    video.srcObject = mediaStream;\r\n                    const videoTrack = mediaStream.getVideoTracks()[0];\r\n                    const settings = videoTrack.getSettings();\r\n                    settings.facingMode='environment'\r\n                    that.setting=settings\r\n                    video.play();\r\n                    video.addEventListener(\"loadedmetadata\", () => {\r\n                        const videoWidth = video.videoWidth;\r\n                        const videoHeight = video.videoHeight;\r\n                        video.setAttribute(\"width\", videoWidth);\r\n                        video.setAttribute(\"height\", videoHeight);\r\n                        boxBorder.style.width = videoHeight + \"px\";\r\n                        boxBorder.style.height = videoWidth + \"px\";\r\n                    });\r\n\r\n                    // Function to draw the box border around the video stream\r\n                    function drawBoxBorder() {\r\n                        const videoWidth = video.videoWidth;\r\n                        const videoHeight = video.videoHeight;\r\n                        const boxSize = Math.min(videoWidth, videoHeight) * 0.6; // Change the box size here as needed\r\n                        const boxX = (videoWidth - boxSize) / 2;\r\n                        const boxY = (videoHeight - boxSize) / 2;\r\n\r\n                        boxBorder.style.left = boxX + \"px\";\r\n                        boxBorder.style.top = boxY + \"px\";\r\n                        boxBorder.style.width = boxSize + \"px\";\r\n                        boxBorder.style.height = boxSize + \"px\";\r\n                    }\r\n\r\n                    // Redraw the box border when the video stream is resized\r\n                    video.addEventListener(\"resize\", drawBoxBorder);\r\n                    drawBoxBorder(); // Initial draw\r\n                    \r\n                });\r\n        },\r\n    },\r\n    mounted() {\r\n        this.startVideo()\r\n    },\r\n}\r\n</script>\r\n<style>\r\n.spinner-container {\r\n  background-color: transparent; /* Transparent background */\r\n}\r\n\r\n.spinner {\r\n  width: 20px;\r\n  height: 20px;\r\n  border-radius: 50%;\r\n  border: 5px solid white;\r\n  border-top-color: black;\r\n  animation: spin 1s infinite linear;\r\n}\r\n\r\n@keyframes spin {\r\n  from { transform: rotate(0deg); }\r\n  to { transform: rotate(360deg); }\r\n}\r\n\r\nbody {\r\n      margin: 0;\r\n      overflow: hidden;\r\n    }\r\n    video {\r\n      width: 100%;\r\n      height: 100%;\r\n      object-fit: cover;\r\n    position: relative;\r\n    display: inline-block;\r\n    }\r\n    #box-border {\r\n        position: absolute;\r\n        top:0;\r\n        left:0;\r\n        border: 2px solid red;\r\n        box-sizing: border-box;\r\n    }\r\n</style>\r\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./test copy.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./test copy.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./test copy.vue?vue&type=template&id=142e1528&\"\nimport script from \"./test copy.vue?vue&type=script&lang=js&\"\nexport * from \"./test copy.vue?vue&type=script&lang=js&\"\nimport style0 from \"./test copy.vue?vue&type=style&index=0&id=142e1528&prod&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","_m","attrs","domProps","on","capture","_v","staticStyle","staticRenderFns","data","setting","methods","canvas","document","getElementById","photoElement","width","video","videoWidth","height","videoHeight","getContext","drawImage","photoURL","toDataURL","src","startVideo","that","boxBorder","navigator","mediaDevices","getUserMedia","facingMode","resizeMode","ideal","then","mediaStream","$forceUpdate","srcObject","videoTrack","getVideoTracks","settings","getSettings","drawBoxBorder","boxSize","Math","min","boxX","boxY","style","left","top","play","addEventListener","setAttribute","mounted","component"],"sourceRoot":""}