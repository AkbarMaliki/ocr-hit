{"version":3,"file":"js/page-test.142af134.js","mappings":"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","sources":["webpack://new/./src/pages/test.vue","webpack://new/src/pages/test.vue","webpack://new/./src/pages/test.vue?e680","webpack://new/./src/pages/test.vue?b00c"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"home\"},[_vm._m(0),_c('div',{staticStyle:{\"position\":\"absolute\",\"z-index\":\"9999\",\"top\":\"0\",\"left\":\"0\"}},_vm._l((_vm.scaledBoxes),function(rect,index){return _c('div',{key:index,staticClass:\"rectangle\",style:(_vm.getRectangleStyles(rect))})}),0),_c('video',{attrs:{\"id\":\"video\",\"autoplay\":\"\",\"muted\":\"\",\"playsinline\":\"\"},domProps:{\"muted\":true}}),_c('button',{attrs:{\"id\":\"captureBtn\"},on:{\"click\":_vm.capture}},[_vm._v(\"Capture Photo\")]),_c('button',{on:{\"click\":_vm.cropPhoto}},[_vm._v(\"Crop Photo\")]),_c('canvas',{attrs:{\"id\":\"canvasElement\"}}),_c('img',{attrs:{\"id\":\"photoElement\",\"src\":\"\",\"alt\":\"Captured Photo\"}}),_vm._l((_vm.listCropImage),function(cropImage,index){return _c('div',{key:index,staticClass:\"crop-image-container\"},[_vm._v(\" \"+_vm._s(cropImage)+\" \"),_c('img',{attrs:{\"src\":cropImage,\"alt\":\"Cropped Photo\"}})])})],2)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticStyle:{\"position\":\"fixed\",\"top\":\"0\",\"left\":\"0\",\"z-index\":\"9999\"}},[_c('div',{staticClass:\"spinner-container\"},[_c('div',{staticClass:\"spinner\"})])])\n}]\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"home\">\r\n    <div style=\"position: fixed; top: 0; left: 0; z-index: 9999\">\r\n      <div class=\"spinner-container\">\r\n        <div class=\"spinner\"></div>\r\n      </div>\r\n    </div>\r\n    <div style=\"position:absolute;z-index:9999;top:0;left:0;\">\r\n     <div\r\n        v-for=\"(rect, index) in scaledBoxes\"\r\n        :key=\"index\"\r\n        :style=\"getRectangleStyles(rect)\"\r\n        class=\"rectangle\"\r\n      ></div>\r\n    </div>\r\n    <video id=\"video\" autoplay muted playsinline></video>\r\n    <button id=\"captureBtn\" @click=\"capture\">Capture Photo</button>\r\n    <button  @click=\"cropPhoto\">Crop Photo</button>\r\n    <canvas id=\"canvasElement\" ></canvas>\r\n    <img id=\"photoElement\" src=\"\" alt=\"Captured Photo\">\r\n         <div v-for=\"(cropImage, index) in listCropImage\" :key=\"index\" class=\"crop-image-container\">\r\n            {{cropImage}}\r\n            <img :src=\"cropImage\" alt=\"Cropped Photo\">\r\n        </div>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n    data() {\r\n        return {\r\n            boxes:[ { \"x\": 355, \"y\": 390, \"width\": 535, \"height\": 37 }, { \"x\": 353, \"y\": 427, \"width\": 693, \"height\": 40 }, { \"x\": 355, \"y\": 467, \"width\": 565, \"height\": 36 }, { \"x\": 357, \"y\": 504, \"width\": 605, \"height\": 36 }, { \"x\": 350, \"y\": 623, \"width\": 541, \"height\": 50 }, { \"x\": 243, \"y\": 1373, \"width\": 295, \"height\": 56 } ],\r\n            scaledBoxes:[],\r\n            height:1920,\r\n            width:1080,\r\n            listCropImage: [],\r\n        }\r\n    },\r\n  methods: {\r\n     capture() {\r\n            const canvas = document.getElementById('canvasElement');\r\n            const photoElement = document.getElementById('photoElement');\r\n            canvas.width = video.videoWidth;\r\n            canvas.height = video.videoHeight;\r\n            canvas.getContext('2d').drawImage(video, 0, 0, canvas.width, canvas.height);\r\n            const photoURL = canvas.toDataURL('image/jpeg');\r\n            photoElement.src = photoURL;\r\n            // this.sendToApi(photoURL)\r\n        },\r\n        cropPhoto() {\r\n      // Get the photo element and its dimensions\r\n            const photoElement = document.getElementById('photoElement');\r\n            const photoWidth = photoElement.naturalWidth;\r\n            const photoHeight = photoElement.naturalHeight;\r\n\r\n            // Create an off-screen canvas for cropping\r\n            const canvas = document.createElement('canvas');\r\n            canvas.width = photoWidth;\r\n            canvas.height = photoHeight;\r\n            const ctx = canvas.getContext('2d');\r\n\r\n            // Loop through the boxes and crop each one\r\n            for (const box of this.boxes) {\r\n                // Calculate the scaled coordinates of the box\r\n                const x = (box.x / this.width) * photoWidth;\r\n                const y = (box.y / this.height) * photoHeight;\r\n                const width = (box.width / this.width) * photoWidth;\r\n                const height = (box.height / this.height) * photoHeight;\r\n                console.log('x',x)\r\n                console.log('y',y)\r\n                console.log('width',width)\r\n                console.log('height',height)\r\n                // Crop the image\r\n                ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n                ctx.drawImage(photoElement, x, y, width, height, 0, 0, width, height);\r\n\r\n                // Add the cropped image to the listCropImage array\r\n                const croppedImageURL = canvas.toDataURL('image/jpeg');\r\n                this.listCropImage.push(croppedImageURL);\r\n            }\r\n            console.log(\"listCropImage\",this.listCropImage)\r\n        },\r\n        sendToApi(photoURL){\r\n            const apiUrl = 'https://hit-ocr.online/api/upload-ocr'; // Replace this with the actual API endpoint\r\n            function dataURLtoFile(dataURL, filename) {\r\n                const arr = dataURL.split(',');\r\n                const mime = arr[0].match(/:(.*?);/)[1];\r\n                const bstr = atob(arr[1]);\r\n                let n = bstr.length;\r\n                const u8arr = new Uint8Array(n);\r\n                while (n--) {\r\n                    u8arr[n] = bstr.charCodeAt(n);\r\n                }\r\n                return new File([u8arr], filename, { type: mime });\r\n            }\r\n            const file = dataURLtoFile(photoURL, 'image.jpg');\r\n            const formData = new FormData();\r\n            formData.append('file', file, 'image.jpg');\r\n            fetch(apiUrl, {\r\n            method: 'POST',\r\n            body: formData,\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data);\r\n            })\r\n            .catch(error => {\r\n                console.error('Error:', error);\r\n            });\r\n        },\r\n        getRectangleStyles({ x, y, width, height }) {\r\n            return {\r\n            position: 'absolute',\r\n            left: `${x}px`,\r\n            top: `${y}px`,\r\n            width: `${width}px`,\r\n            height: `${height}px`,\r\n            border: '1px solid red',\r\n            };\r\n      },\r\n    startVideo() {\r\n      let that = this;\r\n      const video = document.getElementById(\"video\");\r\n      navigator.mediaDevices\r\n        .getUserMedia({\r\n          video: {\r\n            facingMode: \"environment\",\r\n            width: { ideal: that.height },\r\n            height: { ideal: that.width },\r\n          },\r\n        })\r\n        .then(function (mediaStream) {\r\n          that.$forceUpdate();\r\n          video.srcObject = mediaStream;\r\n          video.play();\r\n           function scaleBoxes(boxes, sourceWidth, sourceHeight, targetWidth, targetHeight) {\r\n                const scaleX = targetWidth / sourceWidth;\r\n                const scaleY = targetHeight / sourceHeight;\r\n\r\n                const scaledBoxes = boxes.map((box) => ({\r\n                    x: Math.round(box.x * scaleX),\r\n                    y: Math.round(box.y * scaleY),\r\n                    width: Math.round(box.width * scaleX),\r\n                    height: Math.round(box.height * scaleY),\r\n                }));\r\n\r\n                return scaledBoxes;\r\n            }\r\n            const boxes = that.boxes\r\n            setTimeout(() => {\r\n                const video2 = document.getElementById(\"video\");\r\n                const sourceWidth = that.width;\r\n                const sourceHeight = that.height;\r\n                const targetWidth = video2.clientWidth;\r\n                const targetHeight = video2.clientHeight;\r\n                const scaledBoxes = scaleBoxes(boxes, sourceWidth, sourceHeight, targetWidth, targetHeight);\r\n                that.scaledBoxes=scaledBoxes\r\n            }, 3000);\r\n        });\r\n    },\r\n  },\r\n  mounted() {\r\n    this.startVideo();\r\n  },\r\n};\r\n</script>\r\n<style>\r\n.spinner-container {\r\n  background-color: transparent; /* Transparent background */\r\n}\r\n\r\n.spinner {\r\n  width: 20px;\r\n  height: 20px;\r\n  border-radius: 50%;\r\n  border: 5px solid white;\r\n  border-top-color: black;\r\n  animation: spin 1s infinite linear;\r\n}\r\n\r\n@keyframes spin {\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n.crop-image-container {\r\n  display: inline-block;\r\n  margin: 10px;\r\n  border: 1px solid black;\r\n}\r\n.crop-image-container img {\r\n  width: 100%;\r\n  height: auto;\r\n}\r\nbody {\r\n  margin: 0;\r\n  overflow: hidden;\r\n}\r\nvideo {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n  position: relative;\r\n  display: inline-block;\r\n}\r\n.rectangle {\r\n  background-color: rgba(255, 0, 0, 0.5);\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./test.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./test.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./test.vue?vue&type=template&id=5a204852&\"\nimport script from \"./test.vue?vue&type=script&lang=js&\"\nexport * from \"./test.vue?vue&type=script&lang=js&\"\nimport style0 from \"./test.vue?vue&type=style&index=0&id=5a204852&prod&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","_m","staticStyle","_l","scaledBoxes","rect","index","key","style","getRectangleStyles","attrs","domProps","on","capture","_v","cropPhoto","listCropImage","cropImage","_s","staticRenderFns","data","boxes","height","width","methods","canvas","document","getElementById","photoElement","video","videoWidth","videoHeight","getContext","drawImage","photoURL","toDataURL","src","photoWidth","naturalWidth","photoHeight","naturalHeight","createElement","ctx","box","x","y","console","log","clearRect","croppedImageURL","push","sendToApi","apiUrl","dataURLtoFile","dataURL","filename","arr","split","mime","match","bstr","atob","n","length","u8arr","Uint8Array","charCodeAt","File","type","file","formData","FormData","append","fetch","method","body","then","response","json","catch","error","position","left","top","border","startVideo","that","navigator","mediaDevices","getUserMedia","facingMode","ideal","mediaStream","scaleBoxes","sourceWidth","sourceHeight","targetWidth","targetHeight","scaleX","scaleY","map","Math","round","$forceUpdate","srcObject","play","setTimeout","video2","clientWidth","clientHeight","mounted","component"],"sourceRoot":""}